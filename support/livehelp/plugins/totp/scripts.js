$(document).ready(function() {

	var lang = {
		enabletwofactortitle: 'Enable two-step verification',
		enabletwofactordescription: 'Whenever you sign in to your account, you\'ll need to enter both your password and also a security code generated on your mobile device.',
		downloadtwofactortitle: 'Download app and scan the barcode',
		downloadtwofactordescription: 'Download the free Google Authenticator or Microsoft Authenticator app, and add a new account. Then scan this barcode to setup your account and continue.',
		entertwofactortitle: 'Enter the security code',
		entertwofactordecription: 'Please enter the security code that was generated by your mobile application.',
		disabletwofactortitle: 'Disable two-step verification',
		disabletwofactordescription: 'This will disable the two-step verification for this account.  In the future, only a password will be required to login.  Enter the code generated on your mobile device to confirm.',
		completedtwofactortitle: 'Two-step verification enabled',
		completedtwofactordescription: 'From now on, whenever you sign in to your account, you\'ll need to enter both your password and also a security code from your mobile device.',
		completedtwofactordisabledtitle: 'Two-step verification disabled',
		completedtwofactordisableddescription: 'From now on, whenever you sign in to your account, you\'ll need to enter only your password.',
		backupcodetwofactortitle: 'Safely store your backup code',
		backupcodetwofactordescription: 'If you lose or reset your mobile device you will need your backup code to access your account.  Store your backup code in a safe place.'
	}

	var dialog = '<div class="twofactor-dialog"> \
	<div style="position:absolute; top:10px"> \
		<div class="image"> \
			<img src="./images/Security.png" /> \
		</div> \
		<div class="title" style="font-size: 24px; font-weight: 100; margin: 20px 0 10px 20px">' + lang.enabletwofactortitle + '</div> \
		<div class="description" style="font-size: 16px; font-weight: 100; margin: 0 20px">' + lang.enabletwofactordescription + '</div> \
		<div class="barcode"></div> \
		<div class="backup"> \
			<pre class="code"></pre> \
		</div> \
		<div class="error"> \
			<span class="text">Invalid Security Code</span> \
		</div> \
		<div class="security"><label for="security">Security Code</label><input id="security" name="security" type="password" tabindex="1" /></div> \
	</div> \
	<div style="position:absolute; bottom:15px; right:15px" class="buttons right"> \
		<div class="back-button sprite BackButton" style="position: relative; margin:3px; display: none" title="Back"></div> \
		<div class="continue-button sprite ContinueButton" style="position: relative; margin:3px; display: inline-block" title="Continue"></div> \
		<div class="cancel-button sprite CancelButton" style="position: relative; margin:3px; display: inline-block" title="Cancel"></div> \
		<div class="accept-button sprite AcceptButton" style="position: relative; margin:3px" title="Done"></div> \
	</div> \
</div>';

	var element = $('.accounts.slider');
	if (element.find('.twofactor-dialog').length === 0) {
		$(dialog).appendTo(element);
	}

	var confirm = element.find('.twofactor-dialog'),
		factor = {secret: false, code: false},
		disabled = false;

	element.on('click', '.twofactor.value .btn', function () {

		disabled = (element.find('.twofactor.value .btn').text() == 'Disable');

		if (disabled) {
			confirm.find('.image').hide();
			confirm.find('.title').text(lang.disabletwofactortitle);
			confirm.find('.description').text(lang.disabletwofactordescription);
			confirm.find('.security').show();
			confirm.height(275);
		} else {
			confirm.find('.image').hide();
			confirm.find('.title').text(lang.enabletwofactortitle);
			confirm.find('.description').text(lang.enabletwofactordescription);
			confirm.find('.security').hide();
			confirm.height(200);
		}

		confirm.animate({bottom: 0}, 250, 'easeInOutBack', function () {
			if (disabled) {
				confirm.find('.security input').focus();
			}
		});
	});

	var securityinput = confirm.find('.security input');
	securityinput.on('keypress', _.debounce(function () {
		if (disabled && securityinput.val().length == 6) {
			highlightContinue(100);
		}
		confirm.find('.error').hide();
	}, 250));

	confirm.on('click', '.cancel-button', function () {
		confirm.animate({bottom: -confirm.height()}, 250, 'easeInOutBack');
	})

	confirm.on('click', '.back-button', function () {
		if (confirm.find('.security').is(':visible')) {
			confirm.find('.title').text(lang.downloadtwofactortitle);
			confirm.find('.description').text(lang.downloadtwofactordescription);
			confirm.find('.security').hide();
			confirm.find('.barcode').show();
			confirm.animate({height: '425px'}, 250, 'easeInOutBack');
		} else if (confirm.find('.barcode').is(':visible')) {
			factor.secret = false;
			confirm.find('.title').text(lang.enabletwofactortitle);
			confirm.find('.description').text(lang.enabletwofactordescription);
			confirm.find('.back-button, .barcode, .security').hide();
			confirm.find('.cancel-button').show();
			confirm.animate({height: '200px'}, 250, 'easeInOutBack');
		}
	})

	function randomSecret(length) {
		var result = '',
			chars = '234567QWERTYUIOPASDFGHJKLZXCVBNM';

		for (var i = length; i > 0; --i) {
			result += chars[Math.round(Math.random() * (chars.length - 1))];
		}
		return result;
	}

	function updateAccountTwoFactor(enabled, complete) {

		var title = lang.completedtwofactortitle,
			desc = lang.completedtwofactordescription;

		if (!enabled) {
			title = lang.completedtwofactordisabledtitle;
			desc = lang.completedtwofactordisableddescription;
		}

		if (complete) {
			confirm.find('.back-button, .continue-button, .cancel-button, .security').hide();
			confirm.find('.image, .accept-button').show();
			confirm.find('.title').text(title);
			confirm.find('.description').text(desc);
			confirm.animate({height: '200px'}, 250, 'easeInOutBack');
		}
	}

	function validateCode() {
		var account = {
				Session: session,
				ID: $('#AccountID').val(),
				Data: JSON.stringify(factor),
				Format: 'json',
				Version: '4.0'
			};

		apiRequest({
			url: apiEndpoint.operators,
			data: account,
			success: function (data) {
				// Accounts JSON
				if (data.success !== undefined && data.success == true && data.id !== undefined && data.id > 0) {
					var accounts = storage.get('accounts'),
						account = _.find(accounts, function (account) { return parseInt(account.ID, 10) === data.id });

					account.TwoFactor = data.success;
					storeAccounts(accounts);

					$(document).trigger('LiveHelp.AccountsUpdated', [accounts]);

					var twofactorstatus = element.find('.twofactor.value');
					if (data.backup !== undefined && data.backup.length > 0) {
						twofactorstatus.find('.status').text('Enabled');
						twofactorstatus.find('.btn').text('Disable');

						confirm.animate({height: '250px'}, 250, 'easeInOutBack');

						confirm.find('.back-button, .cancel-button, .security').hide();

						var backup = confirm.find('.backup');
						backup.find('.code').text(data.backup);
						backup.show();

						confirm.find('.title').text(lang.backupcodetwofactortitle);
						confirm.find('.description').text(lang.backupcodetwofactordescription);

						updateAccountTwoFactor(true, false);
					} else {
						twofactorstatus.find('.status').text('Disabled');
						twofactorstatus.find('.btn').text('Enable');
						updateAccountTwoFactor(false, true);
					}

				}
				confirm.find('.security input').val('');
			},
			error: function (jqXHR, textStatus, errorThrown) {
				// Show Error
				success = false;
				confirm.find('.error').fadeIn();
				confirm.find('.security input').val('');
			}
		});
	}

	function highlightContinue(timeout) {
		setTimeout(function () {
			var button = confirm.find('.continue-button');
			button.removeClass('ContinueButton').addClass('ContinueButtonHighlight');
			button.pulse({ opacity: [0.5, 1.0] }, 500, 120);
		}, timeout);
	}

	confirm.on('click', '.accept-button', function () {
		confirm.find('.security, .accept-button').hide();
		confirm.find('.continue-button').show();
		confirm.animate({bottom: -confirm.height()}, 250, 'easeInOutBack');
	});

	confirm.on('click', '.continue-button', function () {

		if (element.find('.twofactor.value .btn').text() == 'Enable') {
			if (factor.secret == false) {
				// Secret
				factor.secret = randomSecret(16);

				var canvas = document.createElement('canvas'),
					account = storage.get('account'),
					firstname = account.Firstname,
					lastname = account.Lastname,
					text = 'otpauth://totp/Helloify: ' + firstname + ' ' + lastname + '?secret=' + factor.secret,
					type = 9,
					size = 4;

				confirm.find('.image').hide();
				confirm.find('.title').text(lang.downloadtwofactortitle);
				confirm.find('.description').text(lang.downloadtwofactordescription);
				confirm.find('.cancel-button').hide();
				confirm.find('.back-button').css('display', 'inline-block');

				/*if (G_vmlCanvasManager) { // IE and excanvas
					canvas = G_vmlCanvasManager.initElement(canvas);
				}*/

				var ctx = canvas.getContext('2d');
				var barcode = new QRCode(type, QRErrorCorrectLevel.H);
				barcode.addData(text);
				barcode.make();

				canvas.setAttribute('width', barcode.getModuleCount() * size);
				canvas.setAttribute('height', barcode.getModuleCount() * size);

				confirm.animate({height: '425px'}, 250, 'easeInOutBack');
				if (confirm.find('.barcode canvas').length === 0) {
					confirm.find('.barcode').append(canvas);
				} else {
					confirm.find('.barcode').show();
				}

				if (canvas.getContext) {
					for (var r = 0; r < barcode.getModuleCount(); r++) {
						for (var c = 0; c < barcode.getModuleCount(); c++) {
							if (barcode.isDark(r, c) ) {
								ctx.fillStyle = 'rgb(51, 51, 51)';
							} else {
								ctx.fillStyle = 'rgb(229, 229, 229)';
							}
							ctx.fillRect (c * size, r * size, size, size);
						}
					}

				}

				highlightContinue(10000);

			} else if (factor.secret.length > 0 && factor.code == false && !confirm.find('.security').is(':visible')) {

				confirm.find('.title').text(lang.entertwofactortitle);
				confirm.find('.description').text(lang.entertwofactordescription);
				confirm.find('.barcode').hide();

				confirm.find('.security').show().find('input').focus();

				confirm.animate({height: '250px'}, 250, 'easeInOutBack');

			} else if (factor.secret.length > 0 && confirm.find('.security input').val().length > 0) {

				// Validate Secret and Code
				factor.code = confirm.find('.security input').val();
				validateCode();

			}

		} else if (confirm.find('.backup').is(':visible')) {

			// Completed
			confirm.find('.backup').hide().find('.code').text('');
			updateAccountTwoFactor(true, true);

		} else {
			// Validate Secret and Code
			factor.secret = false;
			factor.code = confirm.find('.security input').val();
			validateCode();
		}

	})

});
